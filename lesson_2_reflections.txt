What happens when you initialize a repository? Why do you need to do it?

Initialization creates a .git directory which is used to track files in the 
repository. This needs to be done to done beacuse you need to explicitly state
what will be a repository.

How is the staging area different from the working directory and repository? What
value do you think it offers?

The staging area differs as it is a middle ground between the working dir and
the repository.  The value seems to lie in the workflow. Only placing
the desired files in the staging area and not commiting right away, puts a lot
of control on when and what to commit.  Akin to any other staging area.

How can you use the staging area to make sure you have one commit per logical change?

By using the staging area and the git diff --staged command, you can see the changes that exist between the last commit and the file(s) in the staging area.
Making it possible to see exactly what is about to be committed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches would be useul for experimenting with different styles, kind of like alpha
beta testing. Maybe you want to see which particular implementation of some
experimental idea actually works best while still maintaining the original code.
Maybe there is some hypothesis in regard to efficieny or optimization, but testing is needed to see how things play out. Instead of putting a working version out of 
commission, simply make a branch.

How do diagrams help you visualize the branch structure?

Pictures are worth a thousand words. By seeing how each node is related to its 
parent gives a better understanding of how git stores and retrieves infromation.
As well as how branches relate to the master and other branches.
